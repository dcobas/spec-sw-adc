/*
 * hardware-specific definitions for the White Rabbit NIC
 *
 * Copyright (C) 2010-2012 CERN (www.cern.ch)
 * Author: Alessandro Rubini <rubini@gnudd.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __WR_NIC_HARDWARE_H__
#define __WR_NIC_HARDWARE_H__

/* This is the clock used in internal counters. */
#define REFCLK_FREQ (125000000 / 2)
#define NSEC_PER_TICK (NSEC_PER_SEC / REFCLK_FREQ)

/* The interrupt is one of those managed by our WRVIC device */
#define WRN_IRQ_BASE		0 /* FIXME: relative to pci dev */
#define WRN_IRQ_NIC		(WRN_IRQ_BASE + 0)
#define WRN_IRQ_TSTAMP		/* (WRN_IRQ_BASE + 1) -- not used here */
//#define WRN_IRQ_PPSG		(WRN_IRQ_BASE + )
//#define WRN_IRQ_RTU		(WRN_IRQ_BASE + )
//#define WRN_IRQ_RTUT		(WRN_IRQ_BASE + )

/*
 *	spec-wr-nic memory map
 *
 *  0x00000 - 0x1ffff: RT Subsystem (ram etc)
 *
 *  0x20100 - 0x201ff: Endpoint (almost not used here)
 *  0x20200 - 0x202ff: RT Subsystem SoftPLL-adv
 *  0x20300 - 0x203ff: pps generator
 *  0x20400 - 0x204ff: Syscon
 *  0x20500 - 0x205ff: uart
 *
 *  0x40000 - 0x400ff: NIC
 *  0x60000 - 0x60fff: VIC core
 *  0x61000 - 0x61fff: timestamping unit
 *
 */

/* This is the base address of memory regions (gennum bridge, bar 0) */
#define FPGA_BASE_LM32	0x00080000
#define FPGA_SIZE_LM32	0x00010000

#define FPGA_BASE_NIC	0x000c0000
#define FPGA_SIZE_NIC	0x00010000

#define FPGA_BASE_EP	0x000a0100
#define FPGA_SIZE_EP	0x00000100
#define FPGA_SIZE_EACH_EP	0x100 /* There is one only */

#define FPGA_BASE_PPSG	0x000a0300
#define FPGA_SIZE_PPSG	0x00000100

#define FPGA_BASE_VIC	0x000e0000 /* not used here */
#define FPGA_SIZE_VIC	0x00001000
#define FPGA_BASE_TS	0x000e1000
#define FPGA_SIZE_TS	0x00001000

enum fpga_blocks {
	WRN_FB_NIC,
	WRN_FB_EP,
	WRN_FB_PPSG,
	WRN_FB_TS,
	WRN_NR_OF_BLOCKS,
};

/* In addition to the above enumeration, we scan for those many endpoints */
#define WRN_NR_ENDPOINTS		1

/* 8 tx and 8 rx descriptors */
#define WRN_NR_DESC	8
#define WRN_NR_TXDESC	WRN_NR_DESC
#define WRN_NR_RXDESC	WRN_NR_DESC

/* Magic number for endpoint (missing, I fear) */
#define WRN_EP_MAGIC 0xcafebabe

/*
 * The following headers include the register lists, and have been
 * generated by wbgen from .wb source files in svn
 */
#include "../wbgen-regs/endpoint-regs.h"
#include "../wbgen-regs/ppsg-regs.h"
#include "../wbgen-regs/calib-regs.h"
#include "../wbgen-regs/nic-regs.h"
#include "../wbgen-regs/tstamp-regs.h"

/*
 * To make thins easier, define the descriptor structures, for tx and rx
 * Use functions in nic-mem.h to get pointes to them
 */
struct wrn_txd {
	uint32_t tx1;
	uint32_t tx2;
	uint32_t tx3;
	uint32_t unused;
};

struct wrn_rxd {
	uint32_t rx1;
	uint32_t rx2;
	uint32_t rx3;
	uint32_t unused;
};

/* Some more constants */
#define WRN_MTU 1540

#define WRN_DDATA_OFFSET 2 /* data in descriptors is offset by that much */

#endif /* __WR_NIC_HARDWARE_H__ */
